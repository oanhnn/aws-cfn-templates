---
AWSTemplateFormatVersion: '2010-09-09'
Description: Create a RDS Aurora Cluster

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names.
    Type: String
    MaxLength: 30
    MinLength: 1
    AllowedPattern: ^[A-Za-z0-9]*$
    ConstraintDescription: Must contain only alphanumeric characters and numbers.

  AlertTopicARN:
    Description: The Alert Topic ARN.
    Type: String
    Default: ''

  VpcId:
    Description: The VPC ID.
    Type: AWS::EC2::VPC::Id

  DataSubnets:
    Description: The data subnets for Database Instance
    Type: List<AWS::EC2::Subnet::Id>

  ClientSecurityGroup:
    Description: The security group of client instance.
    Type: AWS::EC2::SecurityGroup::Id

  BastionSecurityGroup:
    Description: The security group of bastion instance.
    Type: AWS::EC2::SecurityGroup::Id
    Default: ''

  DBSnapshot:
    Description: Optional identifier for the DB cluster snapshot from which you want to restore (leave blank to create an empty cluster).
    Type: String
    Default: ''

  DBInstanceType:
    Description: The instance type of database server.
    Type: String
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    Default: db.t2.small

  DBName:
    Description: Name of the database (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    Default: ''

  DBUsername:
    Description: The master user name for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    Default: master

  DBPassword:
    Description: The master password for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    NoEcho: true
    Default: ''

  DBBackupRetentionPeriod:
    Description: The number of days to keep snapshots of the database.
    Type: Number
    Default: 30

  DBEncryption:
    Description: Enable server side encryption using KMS (customer managed) CMK (ignored when DBSnapshotIdentifier is set, value used from snapshot).
    Type: String
    Default: false
    AllowedValues: [true, false]

Conditions:

  HasAlertTopic: !Not [!Equals [!Ref AlertTopicARN, '']]
  HasBastionSG: !Not [!Equals [!Ref BastionSecurityGroup, '']]
  HasDBSnapshot: !Not [!Equals [!Ref DBSnapshot, '']]
  HasEncryption: !Equals [!Ref DBEncryption, true]
  HasEncryptionAndNotDBSnapshot: !And [!Condition HasEncryption, !Not [!Condition HasDBSnapshot]]

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref ClientSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DBSecurityGroup

  BastionToSecurityGroupIngress:
    Condition: HasBastionSG
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      ToPort: 3306
      FromPort: 3306
      SourceSecurityGroupId: !Ref BastionSecurityGroup

  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Database subnet group
      SubnetIds: !Ref DataSubnets
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DBSubnetGroup

  Key:
    Condition: HasEncryptionAndNotDBSnapshot
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:CreateGrant'
              - 'kms:ListGrants'
              - 'kms:DescribeKey'
            Resource: '*'
            Condition:
              StringEquals:
                'kms:CallerAccount': !Ref 'AWS::AccountId'
                'kms:ViaService': !Sub 'rds.${AWS::Region}.amazonaws.com'

  KeyAlias:
    Condition: HasEncryptionAndNotDBSnapshot
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${AWS::StackName}'
      TargetKeyId: !Ref Key

  DBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub 'DBClusterParameterGroup for ${EnvironmentName}'
      Family: 'aurora-mysql5.7'
      Parameters:
        character_set_client: utf8
        character_set_database: utf8
        character_set_filesystem: utf8
        character_set_server: utf8
        collation_server: utf8_general_ci

  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub 'DBParameterGroup for ${EnvironmentName}'
      Family: 'aurora-mysql5.7'
      Parameters:
        innodb_lock_wait_timeout: '10'
        log_output: FILE
        tx_isolation: READ-COMMITTED

  DBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      AvailabilityZones:
        - !Select [0, !GetAZs '']
        - !Select [1, !GetAZs '']
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      DatabaseName: !If [HasDBSnapshot, !Ref 'AWS::NoValue', !Ref DBName]
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      Engine: 'aurora-mysql'
      EngineVersion: '5.7.12'
      Port: 3306
      KmsKeyId: !If [HasEncryptionAndNotDBSnapshot, !Ref Key, !Ref 'AWS::NoValue']
      MasterUsername: !If [HasDBSnapshot, !Ref 'AWS::NoValue', !Ref DBUsername]
      MasterUserPassword: !If [HasDBSnapshot, !Ref 'AWS::NoValue', !Ref DBPassword]
      PreferredBackupWindow: '18:24-18:54'
      PreferredMaintenanceWindow: 'tue:19:00-tue:19:30'
      SnapshotIdentifier: !If [HasDBSnapshot, !Ref DBSnapshot, !Ref 'AWS::NoValue']
      StorageEncrypted: !If [HasDBSnapshot, !Ref 'AWS::NoValue', !Ref DBEncryption]
      VpcSecurityGroupIds:
        - !Ref SecurityGroup

  DBInstanceA:
    Type: AWS::RDS::DBInstance
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceClass: !Ref DBInstanceType
      DBParameterGroupName: !Ref DBParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      Engine: 'aurora-mysql'

  DBInstanceB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceClass: !Ref DBInstanceType
      DBParameterGroupName: !Ref DBParameterGroup
      DBSubnetGroupName: !Ref SubnetGroup
      Engine: 'aurora-mysql'

  DatabaseACPUUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertTopicARN
      AlarmDescription: Average database CPU utilization over last 10 minutes too high.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceA
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      OKActions:
        - !Ref AlertTopicARN
      Period: 600
      Statistic: Average
      Threshold: 80

  DatabaseBCPUUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertTopicARN
      AlarmDescription: Average database CPU utilization over last 10 minutes too high.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceB
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      OKActions:
        - !Ref AlertTopicARN
      Period: 600
      Statistic: Average
      Threshold: 80

  DatabaseACPUCreditBalanceTooLowAlarm:
    Condition: HasAlertTopic
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertTopicARN
      AlarmDescription: Average database CPU credit balance over last 10 minutes too low, expect a significant performance drop soon.
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceA
      EvaluationPeriods: 1
      MetricName: CPUCreditBalance
      Namespace: AWS/RDS
      OKActions:
        - !Ref AlertTopicARN
      Period: 600
      Statistic: Average
      Threshold: 20

  DatabaseBCPUCreditBalanceTooLowAlarm:
    Condition: HasAlertTopic
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertTopicARN
      AlarmDescription: Average database CPU credit balance over last 10 minutes too low, expect a significant performance drop soon.
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceB
      EvaluationPeriods: 1
      MetricName: CPUCreditBalance
      Namespace: AWS/RDS
      OKActions:
        - !Ref AlertTopicARN
      Period: 600
      Statistic: Average
      Threshold: 20

  DatabaseAFreeableMemoryTooLowAlarm:
    Condition: HasAlertTopic
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertTopicARN
      AlarmDescription: Average database freeable memory over last 10 minutes too low, performance may suffer.
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceA
      EvaluationPeriods: 1
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      OKActions:
        - !Ref AlertTopicARN
      Period: 600
      Statistic: Average
      Threshold: 64000000 # 64 Megabyte in Byte

  DatabaseBFreeableMemoryTooLowAlarm:
    Condition: HasAlertTopic
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertTopicARN
      AlarmDescription: Average database freeable memory over last 10 minutes too low, performance may suffer.
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceB
      EvaluationPeriods: 1
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      OKActions:
        - !Ref AlertTopicARN
      Period: 600
      Statistic: Average
      Threshold: 64000000 # 64 Megabyte in Byte

  DatabaseClusterEventSubscription:
    Condition: HasAlertTopic
    Type: AWS::RDS::EventSubscription
    Properties:
      EventCategories:
        - failover
        - failure
        - notification
      SnsTopicArn: !Ref AlertTopicARN
      SourceIds:
        - !Ref DBCluster
      SourceType: db-cluster

Outputs:

  StackName:
    Description: Stack name
    Value: !Sub ${AWS::StackName}

  ClusterName:
    Description: The name of the cluster
    Value: !Ref DBCluster

  DNSName:
    Description: The DNS address of the DB cluster
    Value: !GetAtt DBCluster.Endpoint.Address

  ReadDNSName:
    Description: The DNS address of the readonly DB cluster
    Value: !GetAtt DBCluster.ReadEndpoint.Address
