---
AWSTemplateFormatVersion: '2010-09-09'
Description: Create a Security Group for Web instance

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names.
    Type: String
    MaxLength: 30
    MinLength: 1
    AllowedPattern: ^[A-Za-z0-9]*$
    ConstraintDescription: Must contain only alphanumeric characters and numbers.

  VpcId:
    Description: The VPC ID.
    Type: AWS::EC2::VPC::Id

  BastionSecurityGroup:
    Description: The security group of bastion instance.
    Type: AWS::EC2::SecurityGroup::Id
    Default: ''

  ALBSecurityGroup:
    Description: The security group of Application Load Banacer.
    Type: AWS::EC2::SecurityGroup::Id
    Default: ''

Conditions:

  HasBastionSG: !Not [!Equals [!Ref BastionSecurityGroup, '']]
  HasNotBastionSG: !Equals [!Ref BastionSecurityGroup, '']
  HasALBSG: !Not [!Equals [!Ref ALBSecurityGroup, '']]
  HasNotALBSG: !Equals [!Ref ALBSecurityGroup, '']

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WebApp Security Group
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WebSecurityGroup

  BastionSSHToSecurityGroupIngress:
    Condition: HasBastionSG
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      SourceSecurityGroupId: !Ref BastionSecurityGroup

  WorldSSHToSecurityGroupIngress:
    Condition: HasNotBastionSG
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: '0.0.0.0/0'

  ALBHTTPToSecurityGroupIngress:
    Condition: HasALBSG
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId: !Ref ALBSecurityGroup

  WorldHTTPToSecurityGroupIngress:
    Condition: HasNotALBSG
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: '0.0.0.0/0'

Outputs:

  StackName:
    Description: Stack Name
    Value: !Sub ${AWS::StackName}

  SecurityGroup:
    Description: The Web Security Group
    Value: !Ref SecurityGroup
